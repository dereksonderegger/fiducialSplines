% Generated by roxygen2 (4.1.1.9000): do not edit by hand
% Please edit documentation in R/FiducialSpline.R
\name{fiducial.spline}
\alias{fiducial.spline}
\title{Sample from fiducial b-spline distribution}
\usage{
fiducial.spline(x, y, degree, num.knots, sigma.jitter = NULL,
  sigma.split = NULL, chain.length = 500, start.point = NULL,
  burn.in = 100, num.chains = 3, num.jacobians = 100)
}
\arguments{
\item{x}{Vector of x-values}

\item{y}{Vector of y-values}

\item{degree}{Degree of the b-spline to fit to the data}

\item{num.knots}{A scalar or vector of the number of knot points to be considered. e.g. 3:5 or just 3.}

\item{sigma.jitter}{MCMC tuning parameter: the size of jumps for the knot point locations.}

\item{sigma.split}{MCMC tuning parameter: how far apart knots end up when we split one.}

\item{chain.length}{How long a MCMC to create.}

\item{start.point}{A list of starting points}

\item{burn.in}{The length of chain to be considered 'burn in'.}

\item{num.chains}{How many chains to create.}

\item{num.jacobians}{How many randomly selected jacobians to average for each step of the MCMC.}
}
\description{
Sample from fiducial b-spline distribution
}
\examples{
require(SemiPar)
data(lidar)
x <- lidar$range
y <- lidar$logratio
plot(x, y)
foo <- fiducial.spline(x, y, 3, 2)
plot(foo)  # plot the three chains...
confint(foo)
}

